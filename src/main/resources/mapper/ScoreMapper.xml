<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzvtc.bl.dao.ScoreDao">
    <!-- Score的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Score_Map" type="com.hzvtc.bl.entity.Score">
        <id column="sc_id" property="scId" />
        <result column="sc_studentid" property="scStudentid" />
        <result column="sc_courseid" property="scCourseid" />
        <result column="sc_score" property="scScore" />
        <result column="sc_examtime" property="scExamtime" />
    </resultMap>

    <!-- 数据库中表名为:score的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="score_Column">
        score.sc_id as sc_id
        ,score.sc_studentid as sc_studentid
        ,score.sc_courseid as sc_courseid
        ,score.sc_score as sc_score
        ,score.sc_examtime as sc_examtime
    </sql>

    <!--获得类名为:Score对应的数据库表的数据总行数 -->
    <select id="getScoreRowCount" resultType="java.lang.Long">
        select count(sc_id) from score
    </select>
    <!-- 获得类名为:Score对应数据库中表的数据集合 -->
    <select id="selectScore" resultMap="result_Score_Map">
        select 
        <include refid="score_Column" /> 
        from score
    </select> 

    <!-- 获得一个Score对象,以参数Score对象中不为空的属性作为条件进行查询-->
    <select id="selectScoreByObj" parameterType="com.hzvtc.bl.entity.Score" resultMap="result_Score_Map">
        select 
            <include refid="score_Column" /> 
        from score
        <where>
            <if test="scExamtime != null "> and score.sc_examtime = #{scExamtime}</if>
            <if test="scScore != null "> and score.sc_score = #{scScore}</if>
            <if test="scCourseid != null "> and score.sc_courseid = #{scCourseid}</if>
            <if test="scStudentid != null "> and score.sc_studentid = #{scStudentid}</if>
            <if test="scId != null "> and score.sc_id = #{scId}</if>
        </where>
    </select> 

    <!-- 通过Score的id获得对应数据库中表的数据对象-->
    <select id="selectScoreById" parameterType="java.lang.Integer" resultMap="result_Score_Map">
        select 
            <include refid="score_Column" /> 
        from score
        where score.sc_id = #{id}
    </select> 

    <!-- 将Score插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertScore" parameterType="com.hzvtc.bl.entity.Score">
        insert into score(sc_id,sc_studentid,sc_courseid,sc_score,sc_examtime) 
        values(#{scId},#{scStudentid},#{scCourseid},#{scScore},#{scExamtime})
    </insert>

    <!-- 将Score中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyScore" parameterType="com.hzvtc.bl.entity.Score">
        insert into score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="scId != null">sc_id,</if>
            <if test="scStudentid != null">sc_studentid,</if>
            <if test="scCourseid != null">sc_courseid,</if>
            <if test="scScore != null">sc_score,</if>
            <if test="scExamtime != null">sc_examtime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="scId != null"> #{scId},</if>
            <if test="scStudentid != null"> #{scStudentid},</if>
            <if test="scCourseid != null"> #{scCourseid},</if>
            <if test="scScore != null"> #{scScore},</if>
            <if test="scExamtime != null"> #{scExamtime},</if>
        </trim>
    </insert>

    <!-- 将Score批量插入到对应数据库的表中-->
    <insert id="insertScoreByBatch" parameterType="ArrayList">
        insert into score(sc_id,sc_studentid,sc_courseid,sc_score,sc_examtime) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.scId},#{item.scStudentid},#{item.scCourseid},#{item.scScore},#{item.scExamtime})
        </foreach>
    </insert>

    <!-- 通过Score的id将数据库表中对应的数据删除-->
    <delete id="deleteScoreById" parameterType="java.lang.Integer">
        delete from score
        where sc_id = #{id}
    </delete>

    <!-- 通过Score的id将Score的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateScoreById" parameterType="com.hzvtc.bl.entity.Score">
        update score set
            sc_studentid=#{scStudentid}
            ,sc_courseid=#{scCourseid}
            ,sc_score=#{scScore}
            ,sc_examtime=#{scExamtime}
        where sc_id=#{scId}
    </update>

    <!-- 通过Score的id将Score中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyScoreById" parameterType="com.hzvtc.bl.entity.Score">
        update score
        <set>
            <if test="scStudentid != null">
                sc_studentid=#{scStudentid},
            </if>
            <if test="scCourseid != null">
                sc_courseid=#{scCourseid},
            </if>
            <if test="scScore != null">
                sc_score=#{scScore},
            </if>
            <if test="scExamtime != null">
                sc_examtime=#{scExamtime},
            </if>
        </set>
        where sc_id=#{scId}
    </update>

</mapper>